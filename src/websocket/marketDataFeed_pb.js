// source: marketDataFeed.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.Feed', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.Feed.FeedunionCase', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.FullfeedunionCase', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.LTPC', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.OHLC', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.Quote', null, global);
goog.exportSymbol('proto.com.upstox.marketdatafeeder.rpc.proto.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.LTPC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.LTPC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.repeatedFields_, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.repeatedFields_, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.Quote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.Quote.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.Quote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.OHLC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.OHLC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.oneofGroups_);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.Feed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.Feed.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.Feed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.displayName = 'proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject = function(includeInstance, msg) {
  var f, obj = {
    ltp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    ltt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ltq: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cp: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.LTPC;
  return proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLtp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLtt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLtq(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLtp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLtt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLtq();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCp();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double ltp = 1;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.getLtp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.setLtp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int64 ltt = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.getLtt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.setLtt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ltq = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.getLtq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.setLtq = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double cp = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.getCp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.prototype.setCp = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    bidaskquoteList: jspb.Message.toObjectList(msg.getBidaskquoteList(),
    proto.com.upstox.marketdatafeeder.rpc.proto.Quote.toObject, includeInstance),
    lut: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel;
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.Quote;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.Quote.deserializeBinaryFromReader);
      msg.addBidaskquote(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBidaskquoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.Quote.serializeBinaryToWriter
    );
  }
  f = message.getLut();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated Quote bidAskQuote = 1;
 * @return {!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.Quote>}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.getBidaskquoteList = function() {
  return /** @type{!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.Quote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.Quote, 1));
};


/**
 * @param {!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.Quote>} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.setBidaskquoteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.addBidaskquote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.upstox.marketdatafeeder.rpc.proto.Quote, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.clearBidaskquoteList = function() {
  return this.setBidaskquoteList([]);
};


/**
 * optional int64 lut = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.getLut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.prototype.setLut = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.toObject = function(includeInstance, msg) {
  var f, obj = {
    ohlcList: jspb.Message.toObjectList(msg.getOhlcList(),
    proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC;
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.OHLC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.deserializeBinaryFromReader);
      msg.addOhlc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOhlcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OHLC ohlc = 1;
 * @return {!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC>}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.getOhlcList = function() {
  return /** @type{!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.OHLC, 1));
};


/**
 * @param {!Array<!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC>} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.setOhlcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.addOhlc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.upstox.marketdatafeeder.rpc.proto.OHLC, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.prototype.clearOhlcList = function() {
  return this.setOhlcList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.Quote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.toObject = function(includeInstance, msg) {
  var f, obj = {
    bq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    bno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    aq: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ap: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    ano: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bidq: jspb.Message.getFieldWithDefault(msg, 7, 0),
    askq: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.Quote;
  return proto.com.upstox.marketdatafeeder.rpc.proto.Quote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAq(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAno(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBidq(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAskq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.Quote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBq();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getBno();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAq();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAp();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAno();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBidq();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getAskq();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int32 bq = 1;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getBq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setBq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double bp = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getBp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setBp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 bno = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getBno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setBno = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 aq = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getAq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setAq = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double ap = 5;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getAp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setAp = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 ano = 6;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getAno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setAno = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 bidQ = 7;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getBidq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setBidq = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 askQ = 8;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.getAskq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Quote} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Quote.prototype.setAskq = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.toObject = function(includeInstance, msg) {
  var f, obj = {
    op: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    up: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    iv: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    delta: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    theta: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    gamma: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    vega: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    rho: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks;
  return proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIv(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDelta(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGamma(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVega(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRho(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getUp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getIv();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDelta();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTheta();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getGamma();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getVega();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getRho();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional double op = 1;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setOp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double up = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getUp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setUp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double iv = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getIv = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setIv = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double delta = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double theta = 5;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double gamma = 6;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getGamma = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setGamma = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double vega = 7;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getVega = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setVega = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double rho = 8;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.getRho = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.prototype.setRho = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    atp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    cp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    vtt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    oi: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    changeoi: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    lastclose: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    tbq: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    tsq: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    close: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    lc: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    uc: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    yh: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    yl: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    fp: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    fv: jspb.Message.getFieldWithDefault(msg, 15, 0),
    mbpbuy: jspb.Message.getFieldWithDefault(msg, 16, 0),
    mbpsell: jspb.Message.getFieldWithDefault(msg, 17, 0),
    tv: jspb.Message.getFieldWithDefault(msg, 18, 0),
    dhoi: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    dloi: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    sp: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    poi: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails;
  return proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAtp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVtt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOi(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChangeoi(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastclose(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTbq(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTsq(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClose(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLc(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUc(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYh(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYl(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFp(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFv(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMbpbuy(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMbpsell(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTv(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDhoi(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDloi(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSp(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPoi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAtp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getVtt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOi();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getChangeoi();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLastclose();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getTbq();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTsq();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getClose();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getLc();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getUc();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getYh();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getYl();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getFp();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getFv();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getMbpbuy();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getMbpsell();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getTv();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getDhoi();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getDloi();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getSp();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getPoi();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
};


/**
 * optional double atp = 1;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getAtp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setAtp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double cp = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getCp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setCp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int64 vtt = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getVtt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setVtt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double oi = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getOi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setOi = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double changeOi = 5;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getChangeoi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setChangeoi = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double lastClose = 6;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getLastclose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setLastclose = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double tbq = 7;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getTbq = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setTbq = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double tsq = 8;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getTsq = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setTsq = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double close = 9;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getClose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setClose = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double lc = 10;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getLc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setLc = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double uc = 11;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getUc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setUc = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double yh = 12;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getYh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setYh = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double yl = 13;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getYl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setYl = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double fp = 14;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getFp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setFp = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional int32 fv = 15;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getFv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setFv = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 mbpBuy = 16;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getMbpbuy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setMbpbuy = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 mbpSell = 17;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getMbpsell = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setMbpsell = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 tv = 18;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getTv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setTv = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional double dhoi = 19;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getDhoi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setDhoi = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double dloi = 20;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getDloi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setDloi = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double sp = 21;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getSp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setSp = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional double poi = 22;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.getPoi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.prototype.setPoi = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: jspb.Message.getFieldWithDefault(msg, 1, ""),
    open: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    high: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    low: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    close: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ts: jspb.Message.getFieldWithDefault(msg, 7, 0),
    vol: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.OHLC;
  return proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHigh(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolume(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpen();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLow();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getClose();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTs();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getVol();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional string interval = 1;
 * @return {string}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double open = 2;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getOpen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setOpen = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double high = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setHigh = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double low = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setLow = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double close = 5;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getClose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setClose = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 volume = 6;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 ts = 7;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getTs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setTs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 vol = 9;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.getVol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OHLC} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OHLC.prototype.setVol = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.toObject = function(includeInstance, msg) {
  var f, obj = {
    ltpc: (f = msg.getLtpc()) && proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject(includeInstance, f),
    marketlevel: (f = msg.getMarketlevel()) && proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.toObject(includeInstance, f),
    optiongreeks: (f = msg.getOptiongreeks()) && proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.toObject(includeInstance, f),
    marketohlc: (f = msg.getMarketohlc()) && proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.toObject(includeInstance, f),
    efeeddetails: (f = msg.getEfeeddetails()) && proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed;
  return proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.LTPC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader);
      msg.setLtpc(value);
      break;
    case 2:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.deserializeBinaryFromReader);
      msg.setMarketlevel(value);
      break;
    case 3:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.deserializeBinaryFromReader);
      msg.setOptiongreeks(value);
      break;
    case 4:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.deserializeBinaryFromReader);
      msg.setMarketohlc(value);
      break;
    case 5:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.deserializeBinaryFromReader);
      msg.setEfeeddetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLtpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter
    );
  }
  f = message.getMarketlevel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel.serializeBinaryToWriter
    );
  }
  f = message.getOptiongreeks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.serializeBinaryToWriter
    );
  }
  f = message.getMarketohlc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.serializeBinaryToWriter
    );
  }
  f = message.getEfeeddetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional LTPC ltpc = 1;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.getLtpc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.LTPC, 1));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.setLtpc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.clearLtpc = function() {
  return this.setLtpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.hasLtpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MarketLevel marketLevel = 2;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.getMarketlevel = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel, 2));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketLevel|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.setMarketlevel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.clearMarketlevel = function() {
  return this.setMarketlevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.hasMarketlevel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OptionGreeks optionGreeks = 3;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.getOptiongreeks = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks, 3));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.setOptiongreeks = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.clearOptiongreeks = function() {
  return this.setOptiongreeks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.hasOptiongreeks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MarketOHLC marketOHLC = 4;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.getMarketohlc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC, 4));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.setMarketohlc = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.clearMarketohlc = function() {
  return this.setMarketohlc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.hasMarketohlc = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ExtendedFeedDetails eFeedDetails = 5;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.getEfeeddetails = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails, 5));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.setEfeeddetails = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.clearEfeeddetails = function() {
  return this.setEfeeddetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.prototype.hasEfeeddetails = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.toObject = function(includeInstance, msg) {
  var f, obj = {
    ltpc: (f = msg.getLtpc()) && proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject(includeInstance, f),
    marketohlc: (f = msg.getMarketohlc()) && proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.toObject(includeInstance, f),
    lastclose: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    yh: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    yl: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed;
  return proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.LTPC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader);
      msg.setLtpc(value);
      break;
    case 2:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.deserializeBinaryFromReader);
      msg.setMarketohlc(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastclose(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYh(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLtpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter
    );
  }
  f = message.getMarketohlc();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC.serializeBinaryToWriter
    );
  }
  f = message.getLastclose();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getYh();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getYl();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional LTPC ltpc = 1;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.getLtpc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.LTPC, 1));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.setLtpc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.clearLtpc = function() {
  return this.setLtpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.hasLtpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MarketOHLC marketOHLC = 2;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.getMarketohlc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC, 2));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketOHLC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.setMarketohlc = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.clearMarketohlc = function() {
  return this.setMarketohlc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.hasMarketohlc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double lastClose = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.getLastclose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.setLastclose = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double yh = 4;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.getYh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.setYh = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double yl = 5;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.getYl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.prototype.setYl = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.FullfeedunionCase = {
  FULLFEEDUNION_NOT_SET: 0,
  MARKETFF: 1,
  INDEXFF: 2
};

/**
 * @return {proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.FullfeedunionCase}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.getFullfeedunionCase = function() {
  return /** @type {proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.FullfeedunionCase} */(jspb.Message.computeOneofCase(this, proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketff: (f = msg.getMarketff()) && proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.toObject(includeInstance, f),
    indexff: (f = msg.getIndexff()) && proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed;
  return proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.deserializeBinaryFromReader);
      msg.setMarketff(value);
      break;
    case 2:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.deserializeBinaryFromReader);
      msg.setIndexff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketff();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed.serializeBinaryToWriter
    );
  }
  f = message.getIndexff();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarketFullFeed marketFF = 1;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.getMarketff = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed, 1));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.MarketFullFeed|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.setMarketff = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.clearMarketff = function() {
  return this.setMarketff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.hasMarketff = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IndexFullFeed indexFF = 2;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.getIndexff = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed, 2));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.IndexFullFeed|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.setIndexff = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.clearIndexff = function() {
  return this.setIndexff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.prototype.hasIndexff = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    ltpc: (f = msg.getLtpc()) && proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject(includeInstance, f),
    bidaskquote: (f = msg.getBidaskquote()) && proto.com.upstox.marketdatafeeder.rpc.proto.Quote.toObject(includeInstance, f),
    optiongreeks: (f = msg.getOptiongreeks()) && proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.toObject(includeInstance, f),
    efeeddetails: (f = msg.getEfeeddetails()) && proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain;
  return proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.LTPC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader);
      msg.setLtpc(value);
      break;
    case 2:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.Quote;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.Quote.deserializeBinaryFromReader);
      msg.setBidaskquote(value);
      break;
    case 3:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.deserializeBinaryFromReader);
      msg.setOptiongreeks(value);
      break;
    case 4:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.deserializeBinaryFromReader);
      msg.setEfeeddetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLtpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter
    );
  }
  f = message.getBidaskquote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.Quote.serializeBinaryToWriter
    );
  }
  f = message.getOptiongreeks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks.serializeBinaryToWriter
    );
  }
  f = message.getEfeeddetails();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional LTPC ltpc = 1;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.getLtpc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.LTPC, 1));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.setLtpc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.clearLtpc = function() {
  return this.setLtpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.hasLtpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quote bidAskQuote = 2;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.Quote}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.getBidaskquote = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.Quote} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.Quote, 2));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.Quote|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.setBidaskquote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.clearBidaskquote = function() {
  return this.setBidaskquote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.hasBidaskquote = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OptionGreeks optionGreeks = 3;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.getOptiongreeks = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks, 3));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionGreeks|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.setOptiongreeks = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.clearOptiongreeks = function() {
  return this.setOptiongreeks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.hasOptiongreeks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExtendedFeedDetails eFeedDetails = 4;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.getEfeeddetails = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails, 4));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.ExtendedFeedDetails|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.setEfeeddetails = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.clearEfeeddetails = function() {
  return this.setEfeeddetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.prototype.hasEfeeddetails = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.FeedunionCase = {
  FEEDUNION_NOT_SET: 0,
  LTPC: 1,
  FF: 2,
  OC: 3
};

/**
 * @return {proto.com.upstox.marketdatafeeder.rpc.proto.Feed.FeedunionCase}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.getFeedunionCase = function() {
  return /** @type {proto.com.upstox.marketdatafeeder.rpc.proto.Feed.FeedunionCase} */(jspb.Message.computeOneofCase(this, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.Feed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.toObject = function(includeInstance, msg) {
  var f, obj = {
    ltpc: (f = msg.getLtpc()) && proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.toObject(includeInstance, f),
    ff: (f = msg.getFf()) && proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.toObject(includeInstance, f),
    oc: (f = msg.getOc()) && proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.Feed;
  return proto.com.upstox.marketdatafeeder.rpc.proto.Feed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.LTPC;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.deserializeBinaryFromReader);
      msg.setLtpc(value);
      break;
    case 2:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.deserializeBinaryFromReader);
      msg.setFf(value);
      break;
    case 3:
      var value = new proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain;
      reader.readMessage(value,proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.deserializeBinaryFromReader);
      msg.setOc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.Feed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLtpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.LTPC.serializeBinaryToWriter
    );
  }
  f = message.getFf();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed.serializeBinaryToWriter
    );
  }
  f = message.getOc();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain.serializeBinaryToWriter
    );
  }
};


/**
 * optional LTPC ltpc = 1;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.getLtpc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.LTPC, 1));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.LTPC|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.setLtpc = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.clearLtpc = function() {
  return this.setLtpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.hasLtpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FullFeed ff = 2;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.getFf = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed, 2));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.FullFeed|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.setFf = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.clearFf = function() {
  return this.setFf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.hasFf = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OptionChain oc = 3;
 * @return {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.getOc = function() {
  return /** @type{?proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain} */ (
    jspb.Message.getWrapperField(this, proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain, 3));
};


/**
 * @param {?proto.com.upstox.marketdatafeeder.rpc.proto.OptionChain|undefined} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
*/
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.setOc = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Feed} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.clearOc = function() {
  return this.setOc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Feed.prototype.hasOc = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feedsMap: (f = msg.getFeedsMap()) ? f.toObject(includeInstance, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.toObject) : [],
    currentts: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse;
  return proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.upstox.marketdatafeeder.rpc.proto.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = msg.getFeedsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.deserializeBinaryFromReader, "", new proto.com.upstox.marketdatafeeder.rpc.proto.Feed());
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFeedsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.com.upstox.marketdatafeeder.rpc.proto.Feed.serializeBinaryToWriter);
  }
  f = message.getCurrentts();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional Type type = 1;
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.Type}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.getType = function() {
  return /** @type {!proto.com.upstox.marketdatafeeder.rpc.proto.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.upstox.marketdatafeeder.rpc.proto.Type} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * map<string, Feed> feeds = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.com.upstox.marketdatafeeder.rpc.proto.Feed>}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.getFeedsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.com.upstox.marketdatafeeder.rpc.proto.Feed>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.com.upstox.marketdatafeeder.rpc.proto.Feed));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.clearFeedsMap = function() {
  this.getFeedsMap().clear();
  return this;};


/**
 * optional int64 currentTs = 3;
 * @return {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.getCurrentts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse} returns this
 */
proto.com.upstox.marketdatafeeder.rpc.proto.FeedResponse.prototype.setCurrentts = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.com.upstox.marketdatafeeder.rpc.proto.Type = {
  INITIAL_FEED: 0,
  LIVE_FEED: 1
};

goog.object.extend(exports, proto.com.upstox.marketdatafeeder.rpc.proto);
